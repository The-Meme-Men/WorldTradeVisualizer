"""Initial Migration
Revision ID: 9348392480f9
Revises: 
Create Date: 2022-05-11 14:30:35.808252
"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic
revision = '9348392480f9'
down_revision = None
branch_labels = None
depends_on = None
def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comm_class_code',
    sa.Column('code_class', sa.String(length=16), nullable=False),
    sa.Column('class_name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('code_class')
    )
    op.create_table('country',
    sa.Column('country_id', sa.String(length=8), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('iso', sa.String(length=16), nullable=True),
    sa.Column('reporter', sa.Boolean(), nullable=True),
    sa.Column('partner', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('country_id'),
    sa.UniqueConstraint('country_id')
    )
    op.create_index(op.f('ix_country_iso'), 'country', ['iso'], unique=True)
    op.create_index(op.f('ix_country_name'), 'country', ['name'], unique=True)
    op.create_table('cst_code',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('description')
    )
    op.create_table('flow_code',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('description')
    )
    op.create_table('mos_code',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('description')
    )
    op.create_table('mot_code',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('description')
    )
    op.create_table('quantity_code',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('description')
    )
    op.create_table('rg_code',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=False),
    sa.Column('flow_code', sa.String(length=4), nullable=True),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('description'),
    sa.UniqueConstraint('flow_code')
    )
    op.create_table('availability_record',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.String(length=1), nullable=True),
    sa.Column('com_class_code_id', sa.String(length=16), nullable=True),
    sa.Column('reporter_id', sa.String(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('total_records', sa.Integer(), nullable=True),
    sa.Column('is_original', sa.Boolean(), nullable=True),
    sa.Column('publication_date', sa.Date(), nullable=True),
    sa.Column('is_partner_detail', sa.Boolean(), nullable=True),
    sa.Column('inserted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['com_class_code_id'], ['comm_class_code.code_class'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['country.country_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_availability_record_com_class_code_id'), 'availability_record', ['com_class_code_id'], unique=False)
    op.create_index(op.f('ix_availability_record_frequency'), 'availability_record', ['frequency'], unique=False)
    op.create_index(op.f('ix_availability_record_inserted'), 'availability_record', ['inserted'], unique=False)
    op.create_index(op.f('ix_availability_record_period'), 'availability_record', ['period'], unique=False)
    op.create_index(op.f('ix_availability_record_reporter_id'), 'availability_record', ['reporter_id'], unique=False)
    op.create_table('commodity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('comtrade_code', sa.String(length=32), nullable=True),
    sa.Column('comm_class_code_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['comm_class_code_id'], ['comm_class_code.code_class'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description', 'comm_class_code_id', 'comtrade_code')
    )
    op.create_index(op.f('ix_commodity_comtrade_code'), 'commodity', ['comtrade_code'], unique=False)
    op.create_index(op.f('ix_commodity_description'), 'commodity', ['description'], unique=False)
    op.create_table('trade_stat',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('aggregation_level', sa.Integer(), nullable=True),
    sa.Column('is_leaf', sa.Boolean(), nullable=True),
    sa.Column('rg_id', sa.Integer(), nullable=True),
    sa.Column('reporter_id', sa.String(), nullable=True),
    sa.Column('partner_id', sa.String(), nullable=True),
    sa.Column('partner_2_id', sa.String(), nullable=True),
    sa.Column('commodity_id', sa.Integer(), nullable=True),
    sa.Column('quantity_desc_id', sa.Integer(), nullable=True),
    sa.Column('alt_quantity_desc_id', sa.Integer(), nullable=True),
    sa.Column('mot_code_id', sa.Integer(), nullable=True),
    sa.Column('mos_code_id', sa.Integer(), nullable=True),
    sa.Column('cst_code_id', sa.Integer(), nullable=True),
    sa.Column('flow_code_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('alt_quantity', sa.Integer(), nullable=True),
    sa.Column('net_weight', sa.Integer(), nullable=True),
    sa.Column('gross_weight', sa.Integer(), nullable=True),
    sa.Column('trade_value', sa.Integer(), nullable=True),
    sa.Column('cif_value', sa.Integer(), nullable=True),
    sa.Column('fob_value', sa.Integer(), nullable=True),
    sa.Column('est_code', sa.Integer(), nullable=True),
    sa.Column('inserted', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['alt_quantity_desc_id'], ['quantity_code.code'], ),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], ),
    sa.ForeignKeyConstraint(['cst_code_id'], ['cst_code.code'], ),
    sa.ForeignKeyConstraint(['flow_code_id'], ['flow_code.code'], ),
    sa.ForeignKeyConstraint(['mos_code_id'], ['mos_code.code'], ),
    sa.ForeignKeyConstraint(['mot_code_id'], ['mot_code.code'], ),
    sa.ForeignKeyConstraint(['partner_2_id'], ['country.country_id'], ),
    sa.ForeignKeyConstraint(['partner_id'], ['country.country_id'], ),
    sa.ForeignKeyConstraint(['quantity_desc_id'], ['quantity_code.code'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['country.country_id'], ),
    sa.ForeignKeyConstraint(['rg_id'], ['rg_code.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trade_stat_commodity_id'), 'trade_stat', ['commodity_id'], unique=False)
    op.create_index(op.f('ix_trade_stat_partner_2_id'), 'trade_stat', ['partner_2_id'], unique=False)
    op.create_index(op.f('ix_trade_stat_partner_id'), 'trade_stat', ['partner_id'], unique=False)
    op.create_index(op.f('ix_trade_stat_reporter_id'), 'trade_stat', ['reporter_id'], unique=False)
    op.create_index(op.f('ix_trade_stat_rg_id'), 'trade_stat', ['rg_id'], unique=False)
    op.create_index(op.f('ix_trade_stat_year'), 'trade_stat', ['year'], unique=False)
    # ### end Alembic commands ###
def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trade_stat_year'), table_name='trade_stat')
    op.drop_index(op.f('ix_trade_stat_rg_id'), table_name='trade_stat')
    op.drop_index(op.f('ix_trade_stat_reporter_id'), table_name='trade_stat')
    op.drop_index(op.f('ix_trade_stat_partner_id'), table_name='trade_stat')
    op.drop_index(op.f('ix_trade_stat_partner_2_id'), table_name='trade_stat')
    op.drop_index(op.f('ix_trade_stat_commodity_id'), table_name='trade_stat')
    op.drop_table('trade_stat')
    op.drop_index(op.f('ix_commodity_description'), table_name='commodity')
    op.drop_index(op.f('ix_commodity_comtrade_code'), table_name='commodity')
    op.drop_table('commodity')
    op.drop_index(op.f('ix_availability_record_reporter_id'), table_name='availability_record')
    op.drop_index(op.f('ix_availability_record_period'), table_name='availability_record')
    op.drop_index(op.f('ix_availability_record_inserted'), table_name='availability_record')
    op.drop_index(op.f('ix_availability_record_frequency'), table_name='availability_record')
    op.drop_index(op.f('ix_availability_record_com_class_code_id'), table_name='availability_record')
    op.drop_table('availability_record')
    op.drop_table('rg_code')
    op.drop_table('quantity_code')
    op.drop_table('mot_code')
    op.drop_table('mos_code')
    op.drop_table('flow_code')
    op.drop_table('cst_code')
    op.drop_index(op.f('ix_country_name'), table_name='country')
    op.drop_index(op.f('ix_country_iso'), table_name='country')
    op.drop_table('country')
    op.drop_table('comm_class_code')
    # ### end Alembic commands ###